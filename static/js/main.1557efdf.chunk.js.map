{"version":3,"sources":["utils/api.js","components/loader.js","components/table.js","App.js","reportWebVitals.js","index.js"],"names":["fetcher","fetch","then","res","json","Loader","styled","div","Table","columns","data","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","Styles","App","React","useMemo","Header","accessor","Cell","parseInt","id","d","className","user","first_name","last_name","progress","toFixed","url","URL","window","location","href","searchParams","URLSearchParams","search","env","get","campaign_id","useSWR","error","results","isLoading","isError","useEnrollments","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"mMAEMA,EAAU,kBAAaC,MAAK,WAAL,aAAeC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WCA5D,IAceC,EAdAC,IAAOC,IAAV,6U,sBCyCGC,I,EAAAA,EAzCf,YAAmC,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KAAQ,EAQ1BC,mBAAS,CACTF,UACAC,SAPAE,EAH0B,EAG1BA,cACAC,EAJ0B,EAI1BA,kBACAC,EAL0B,EAK1BA,aACAC,EAN0B,EAM1BA,KACAC,EAP0B,EAO1BA,WAOJ,OACI,kDAAWJ,KAAX,cACA,gCACKE,EAAaG,KAAI,SAAAC,GAAW,OAC7B,8CAAQA,EAAYC,uBAApB,aACKD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC/B,8CAAQA,EAAOC,kBAAf,aAAkCD,EAAOE,OAAO,wBAKxD,iDAAWV,KAAX,aACKE,EAAKE,KAAI,SAACO,EAAKC,GAEhB,OADAT,EAAWQ,GAEP,8CAAQA,EAAIE,eAAZ,aACCF,EAAIG,MAAMV,KAAI,SAAAW,GACX,OAAO,8CAAQA,EAAKC,gBAAb,aAA8BD,EAAKL,OAAO,4BC1B/DO,EAASxB,IAAOC,IAAV,+tBA6FGwB,MAnDf,WACE,IAAMtB,EAAUuB,IAAMC,SACpB,iBAAM,CACJ,CACEC,OAAQ,OACRC,SAAU,GACVC,KAAM,SAACZ,GACL,OAAO,8BAAMa,SAASb,EAAIA,IAAIc,IAAM,MAGxC,CACEJ,OAAQ,OACRC,SAAU,SAAAI,GAAC,OACT,sBAAKC,UAAU,UAAf,UACGD,EAAEE,KAAKC,WADV,IACuBH,EAAEE,KAAKE,eAIlC,CACET,OAAQ,QACRC,SAAU,SAEZ,CACED,OAAQ,WACRC,SAAU,SAAAI,GAAC,OACT,qBAAKC,UAAU,UAAf,UACiB,IAAbD,EAAEK,UAAgBC,QAAQ,GAAK,WAKzC,IAGIC,EAAM,IAAIC,IAAIC,OAAOC,SAASC,MAC9BC,EAAe,IAAIC,gBAAgBN,EAAIO,QACvCC,EAAMH,EAAaI,IAAI,OACvBC,EAAcL,EAAaI,IAAI,eArCxB,EH7Cf,WAA2C,IAAnBD,EAAkB,uDAAZ,OAAQhB,EAAI,yCACdmB,YAAO,cAAD,OAAeH,EAAf,oDAA8DhB,EAA9D,gBAAgFtC,GAAtGU,EAD8B,EAC9BA,KAAMgD,EADwB,EACxBA,MAEd,MAAO,CACHhD,MAAU,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMiD,UAAW,GACvBC,WAAYF,IAAUhD,EACtBmD,QAASH,GG8ESI,CAAeR,EAAKE,GAApC9C,EAvCK,EAuCLA,KAAMgD,EAvCD,EAuCCA,MAEd,OAAY,OAARJ,GAAgC,OAAhBE,GAChBE,EAD6C,uDAE5ChD,EAGH,cAACoB,EAAD,UACE,cAAC,EAAD,CAAOrB,QAASA,EAASC,KAAMA,MAJjB,cAAC,EAAD,KChFLqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/D,MAAK,YAAkD,IAA/CgE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAShD,OACP,cAAC,IAAMiD,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.1557efdf.chunk.js","sourcesContent":["import useSWR from 'swr';\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\n\nfunction useEnrollments(env = 'test', id) {\n    const { data, error } = useSWR(`https://ga-${env}.wahthefox.com/api/enrollments/?campaign=${id}&sort=-miles`, fetcher)\n\n    return {\n        data: data?.results || [],\n        isLoading: !error && !data,\n        isError: error\n    }\n}\n\nexport { useEnrollments };\n","import styled from 'styled-components'\n\nconst Loader = styled.div`\n    border: 4px solid #f3f3f3; /* Light grey */\n    border-top: 4px solid #A7B459; /* Blue */\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`\n\nexport default Loader;\n","import { useTable } from 'react-table'\n\nfunction Table({ columns, data }) {\n    // Use the state and functions returned from useTable to build your UI\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable({\n        columns,\n        data,\n    })\n\n    // Render the UI for your table\n    return (\n        <table {...getTableProps()}>\n        <thead>\n            {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                ))}\n            </tr>\n            ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n            prepareRow(row)\n            return (\n                <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                </tr>\n            )\n            })}\n        </tbody>\n        </table>\n    )\n}\n\nexport default Table;\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { useEnrollments } from 'utils/api'\nimport Loader from 'components/loader'\nimport Table from 'components/table'\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-collapse: collapse;\n    margin: 25px 0;\n    font-size: 0.9em;\n    font-family: sans-serif;\n    min-width: 400px;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\n    width: 100%;\n\n    thead tr {\n      background-color: #A7B459;\n      color: #ffffff;\n      text-align: left;\n    }\n\n    thead th,\n    td {\n      padding: 12px 15px;\n    }\n\n    tbody tr {\n      border-bottom: 1px solid #dddddd;\n    }\n\n    tbody tr:nth-of-type(even) {\n      background-color: #f3f3f3;\n    }\n\n    tbody tr:last-of-type {\n        border-bottom: 2px solid #5E7835;\n    }\n\n    tbody tr.active-row {\n      font-weight: bold;\n      color: #009879;\n    }\n  }\n`\n\nfunction App() {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Rank',\n        accessor: '',\n        Cell: (row) => {\n          return <div>{parseInt(row.row.id) + 1}</div>;\n        },\n      },\n      {\n        Header: 'Name',\n        accessor: d => (\n          <div className=\"wrapper\">\n            {d.user.first_name} {d.user.last_name}\n          </div>\n        )\n      },\n      {\n        Header: 'Miles',\n        accessor: 'miles',\n      },\n      {\n        Header: 'Progress',\n        accessor: d => (\n          <div className=\"wrapper\">\n            {(d.progress * 100).toFixed(2) + '%'}\n          </div>\n        )\n      },\n    ],\n    []\n  )\n\n  const url = new URL(window.location.href)\n  const searchParams = new URLSearchParams(url.search);\n  const env = searchParams.get('env')\n  const campaign_id = searchParams.get('campaign_id')\n\n  const { data, error } = useEnrollments(env, campaign_id)\n\n  if (env === null || campaign_id === null) return <h1>Something went wrong!</h1>\n  if (error) return <h1>Something went wrong!</h1>\n  if (!data) return <Loader />\n\n  return (\n    <Styles>\n      <Table columns={columns} data={data} />\n    </Styles>\n  )\n}\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}